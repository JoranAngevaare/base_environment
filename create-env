#!/bin/bash

#######################################################################
#
# versions in this release

admix_version=0.2.2
straxen_version=0.4.1

#######################################################################

set -e

target_dir=$1

xenonnt_tag=$2
if [ "x$xenonnt_tag" = "x" ]; then
    xenonnt_tag=development
fi

env_name=XENONnT_${xenonnt_tag}

if [ "X$target_dir" = "X" ]; then
    echo "Please specify a target directory. Example: ./create-env /tmp/myenv" >&1
    exit 1
fi

if [ -e $target_dir ]; then
    echo "Target directory already exists - refusing to work on it" >&1
    exit 1
fi
mkdir -p $target_dir


function announce {
    echo
    echo "#######################################################################################"
    echo "## $1       ("`date -u`")"
    echo
}


function run_quietly {
    log=`mktemp --suffix=.log`
    rc=0
    echo "Running quietly: $@"
    if ! $@ >$log 2>&1; then
        rc=$?
        tail -n 500 $log
    fi
    rm -f $log
    return $rc
}


# build environment
export LC_ALL=en_US.utf8
export LANG=en_US.utf8

announce "Installing Miniconda"
wget -nv -O conda_setup.sh https://repo.continuum.io/miniconda/Miniconda2-4.6.14-Linux-x86_64.sh
bash conda_setup.sh -b -p $target_dir/anaconda
rm -f conda_setup.sh

export PKG_CONFIG_PATH=${target_dir}/anaconda/envs/${env_name}/lib64/pkgconfig:/usr/lib64/pkgconfig:/usr/share/pkgconfig

announce "Installing Anaconda environment"
echo -e "name: ${env_name}\n$(cat conda_xnt.yml | grep -v '^name:.*')" > conda_xnt_tmp.yml         # Add name to the env yml
$target_dir/anaconda/bin/conda env create -f conda_xnt_tmp.yml

announce "Cleaning Anaconda environment"
$target_dir/anaconda/bin/conda clean --all --yes
rm -f ${target_dir}/anaconda/pkgs/rope-0.11.0-py37_0/info/LICENSE.txt

announce "Activating Anaconda environment"
source $target_dir/anaconda/bin/activate ${env_name}

jupyter labextension install @pyviz/jupyterlab_pyviz   # for waveform display in jupyterlab
announce "Installing non-grid XENON software"
pip install straxen==${straxen_version}
pip install git+https://github.com/XENONnT/utilix.git
pip install git+https://github.com/XENONnT/WFSim.git
pip install git+https://github.com/XENONnT/admix.git@v${admix_version}

# gfal2
announce "Installing GFAL2"
# deps: yum install cmake doxygen glib2-devel libattr-devel openldap-devel zlib-devel lfc-devel dpm-devel srm-ifce-devel dcap-devel globus-gass-copy-devel davix-devel xrootd-client-devel libssh2-devel gtest-devel json-c-devel
cd ${target_dir}
rm -rf gfal2
git clone https://gitlab.cern.ch/dmc/gfal2.git
cd gfal2
git checkout v2.16.2
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=${target_dir}/anaconda/envs/${env_name} ..
make
make install
cd ${target_dir}
rm -rf gfal2

# gfal2-python bindings
announce "Installing GFAL2 Python bindings"
git clone https://gitlab.cern.ch/dmc/gfal2-bindings.git
cd gfal2-bindings
git checkout develop
perl -p -i -e "s;.*\\\${Boost_LIBRARYDIR};            \"${target_dir}/anaconda/envs/${env_name}/lib\";" CMakeLists.txt
cmake -DPYTHON_EXECUTABLE=${target_dir}/anaconda/envs/${env_name}/bin/python3.6 \
      -DPYTHON_EXECUTABLE_3=${target_dir}/anaconda/envs/${env_name}/bin/python3.6 \
      -DBOOST_ROOT=${target_dir}/anaconda/envs/${env_name} \
      -DSKIP_DOC=TRUE -DSKIP_TESTS=TRUE
make
make install
cd ${target_dir}
rm -rf gfal2-bindings

# gfal2 clients
announce "Installing GFAL2 clients"
git clone https://gitlab.cern.ch/dmc/gfal2-util.git
cd gfal2-util/
perl -p -i -e 's;src/;src_py3/;g' setup.py
python3.6 setup.py install --prefix=${target_dir}/anaconda/envs/${env_name}
cd ${target_dir}
rm -rf gfal2-util

# rucio-clients
announce "Installing Rucio"
#pip install rucio-clients==1.19.5
git clone https://github.com/XeBoris/rucio.git
cd rucio
# don't mess with our version of setuptools, urllib3 and requests
perl -p -i -e 's/^setuptools.*//' tools/pip-requires-client
perl -p -i -e 's/^urllib3.*//' tools/pip-requires-client
perl -p -i -e 's/^requests.*//' tools/pip-requires-client
python setup_rucio_client.py install --prefix=${target_dir}/anaconda/envs/${env_name}
cd ${target_dir}
rm -rf rucio

# rucio config
cat >${target_dir}/anaconda/envs/${env_name}/etc/rucio.cfg <<EOF
[common]
logdir = /var/log/rucio
loglevel = DEBUG
mailtemplatedir=/opt/rucio/etc/mail_templates

[client]
rucio_host = https://rucio-xenon.grid.uchicago.edu:443
auth_host = https://rucio-xenon.grid.uchicago.edu:443
auth_type = x509

# ca_cert = /etc/grid-security/certificates
ca_cert = \$X509_CERT_DIR
client_cert = \$X509_USER_PROXY
client_key = \$X509_USER_PROXY
client_x509_proxy = \$X509_USER_PROXY
request_retries = 3
EOF

announce "Adding setup.sh"

# generate setup.sh file for easy sourcing
cat >${target_dir}/setup.sh <<EOF
#!/bin/bash

for VAR in X509_CERT_DIR X509_VOMS_DIR; do
    VALUE=\${!VAR}
    if [ "X\$VALUE" != "X" ]; then
        echo "WARNING: \$VAR is set set and could lead to problems when using this environment"
    fi
done

# need a clean PYTHONPATH to make sure we are not picking up older Python libs
unset PYTHONPATH

# when inside a container, reset some variables from outside
if [ "x\$SINGULARITY_CONTAINER" != "x" ]; then
    unset LD_LIBRARY_PATH
fi

source ${target_dir}/anaconda/bin/activate ${env_name}

# prepend to LD_LIBRARY_PATH - non-Python tools might be using it
export LD_LIBRARY_PATH=\$CONDA_PREFIX/lib64:\$CONDA_PREFIX/lib\${LD_LIBRARY_PATH:+:}\${LD_LIBRARY_PATH}

# gfal2
export GFAL_CONFIG_DIR=\$CONDA_PREFIX/etc/gfal2.d
export GFAL_PLUGIN_DIR=\$CONDA_PREFIX/lib64/gfal2-plugins/

# rucio
export RUCIO_HOME=\$CONDA_PREFIX
export RUCIO_ACCOUNT=xenon-analysis
if [ "x\$X509_CERT_DIR" = "x" ]; then
    export X509_CERT_DIR=/etc/grid-security/certificates
fi

EOF

announce "Running tests"
. ${target_dir}/setup.sh
# gfal2
python -c 'import gfal2'
# Strax
git clone --single-branch --branch stable https://github.com/AxFoundation/strax.git
pytest strax || { echo 'strax tests failed' ; exit 1; }
rm -r strax
# Straxen
git clone --single-branch --branch v$straxen_version https://github.com/XENONnT/straxen.git
pytest straxen || { echo 'straxen tests failed' ; exit 1; }
rm -r straxen

announce "All done!"

